{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"영화 상세정보\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.data[_ctx.selectedMovie].title), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"button\", {\n    \"on:click\": _cache[0] || (_cache[0] = $event => $props.isModal = false)\n  }, \"닫기\", 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","$props","isModal","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","data","selectedMovie","title","_hoisted_3","_cache","$event","_createCommentVNode"],"sources":["/Users/wonsoyeon/Desktop/vue/movie-info/src/components/Modal.vue"],"sourcesContent":["<template>\n  <div class=\"modal\" v-if=\"isModal\">\n    <div class=\"inner\">\n      <h3>{{ data[selectedMovie].title }}</h3>\n      <p>영화 상세정보</p>\n      <button @:click=\"isModal = false\">닫기</button>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"ModalComponent\",\n  props: {\n    isModal: Boolean,\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAO;gCAEhBC,mBAAA,CAAc,WAAX,SAAO;;SAHWC,MAAA,CAAAC,OAAO,I,cAAhCC,mBAAA,CAMM,OANNC,UAMM,GALJJ,mBAAA,CAIM,OAJNK,UAIM,GAHJL,mBAAA,CAAwC,YAAAM,gBAAA,CAAjCC,IAAA,CAAAC,IAAI,CAACD,IAAA,CAAAE,aAAa,EAAEC,KAAK,kBAChCC,UAAc,EACdX,mBAAA,CAA6C;IAApC,UAAM,EAAAY,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEZ,MAAA,CAAAC,OAAO;KAAU,IAAE,2B,OAL1CY,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}