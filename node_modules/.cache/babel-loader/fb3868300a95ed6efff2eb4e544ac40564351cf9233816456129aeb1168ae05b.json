{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"X\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"event\", {\n      show: $data.isOpen\n    }])\n  }, [_createElementVNode(\"p\", null, _toDisplayString($props.text), 1 /* TEXT */), _hoisted_1], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","class","_normalizeClass","show","$data","isOpen","_toDisplayString","$props","text","_hoisted_1"],"sources":["/Users/wonsoyeon/Desktop/vue/movie-info/src/components/Event.vue"],"sourcesContent":["<template>\n  <div class=\"event\" :class=\"{ show: isOpen }\">\n    <p>{{ text }}</p>\n    <button>X</button>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"EventComponent\",\n  props: {\n    text: String,\n  },\n  data() {\n    return {\n      isOpen: true,\n    };\n  },\n};\n</script>\n<style>\n.event {\n  background: #444;\n  color: #fff;\n  padding: 10px 20px;\n  text-align: center;\n  font-size: small;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  display: none;\n}\n\n.show {\n  display: flex;\n}\n\n.event p {\n  margin: 0;\n}\n\n.event button {\n  margin: 0;\n}\n</style>\n"],"mappings":";gCAGIA,mBAAA,CAAkB,gBAAV,GAAC;;uBAFXC,mBAAA,CAGM;IAHDC,KAAK,EADZC,eAAA,EACa,OAAO;MAAAC,IAAA,EAAiBC,KAAA,CAAAC;IAAM;MACvCN,mBAAA,CAAiB,WAAAO,gBAAA,CAAXC,MAAA,CAAAC,IAAI,kBACVC,UAAkB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}